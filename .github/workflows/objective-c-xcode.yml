name: Xcode - Build and Analyze

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Archive XCFramework
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
          

      - name: Build iOS Default
        env:
          scheme: ${{ 'default' }}
        run: |
          xcodebuild archive -scheme "$scheme" -destination 'generic/platform=iOS Simulator' -archivePath './build/fantastic-chainsaw.framework-iphoneos.xcarchive'
          
      - name: Build iOS Simulator
        env:
          scheme: ${{ 'default' }}
        run: |
          xcodebuild archive -scheme "$scheme" -destination 'generic/platform=iOS' -archivePath './build/fantastic-chainsaw.framework-iphonesimulator.xcarchive'
          
      - name: Build Mac Catalyst
        env:
          scheme: ${{ 'default' }}
        run: |
          xcodebuild archive -scheme "$scheme" -destination 'platform=macOS,arch=x86_64,variant=Mac Catalyst' -archivePath './build/fantastic-chainsaw.framework-catalyst.xcarchive'
          
      - name: Generate XCFramework
        run: >
          xcodebuild -create-xcframework
          -framework './build/fantastic-chainsaw.framework-iphonesimulator.xcarchive/Products/Library/Frameworks/fantastic-chainsaw.framework'
          -framework './build/fantastic-chainsaw.framework-iphoneos.xcarchive/Products/Library/Frameworks/fantastic-chainsaw.framework'
          -framework './build/fantastic-chainsaw.framework-catalyst.xcarchive/Products/Library/Frameworks/fantastic-chainsaw.framework'
          -output './build/fantastic-chainsaw.xcframework'
